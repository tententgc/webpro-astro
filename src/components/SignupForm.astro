---
import { Notification } from 'accessible-astro-components'
import { Icon } from 'astro-icon'
import { initializeApp } from 'firebase/app';
---



<form class="login-form space-content" method="post">
  <Notification type="warning">
    <Icon pack="majesticons" name="emoji-sad-line" /><p class="size-12">Incorrect email and password Format. Please try again.</p>
  </Notification>
  <div class="login-form__controls">
    <label for="email">Email</label>
    <input type="email" name="email" required>
  </div>
  <div class="login-form__controls">
    <label for="password">Password</label>
    <input type="password" name="password" id="password" required>
  </div>
  <div class="login-form__controls">
    <label for="confirm-password">Confirm Password</label>
    <input type="password" name="confirm-password" id="confirm-password"required>
  </div>
  
  <label class="checkbox">
    <input type="checkbox" name="agreement">
    <span>I agree of all the <a href="/"> Term,Privacy,Policy</a> </span>
  </label>
  <!-- <button id="google-login" class="button color-secondary behavior-full" type="button">Login with Google</button> -->
  <button class="button color-secondary behavior-full" type="submit">SignUp</button>
  
  <div>
    <span>Already have an account? <a href="/login">Login</a></span>
  </div>
</form> 


<script type="module">
  // Import the functions you need from the SDKs you need
  import { initializeApp } from "https://www.gstatic.com/firebasejs/9.21.0/firebase-app.js";
  import { getAnalytics } from "https://www.gstatic.com/firebasejs/9.21.0/firebase-analytics.js";
  import { getAuth, createUserWithEmailAndPassword , GoogleAuthProvider, signInWithPopup } from "https://www.gstatic.com/firebasejs/9.21.0/firebase-auth.js";

  // Your web app's Firebase configuration
  // For Firebase JS SDK v7.20.0 and later, measurementId is optional
 const firebaseConfig = {
    apiKey: "AIzaSyCj9n2EhMWZQm2x_x8a_Y07V5khOitn5oc",
    authDomain: "webpro-astro.firebaseapp.com",
    projectId: "webpro-astro",
    storageBucket: "webpro-astro.appspot.com",
    messagingSenderId: "516443802282",
    appId: "1:516443802282:web:2d1ac7313ea61276d25ed3",
    measurementId: "G-YWYJ59Q51K"
  };

  // Initialize Firebase
  const app = initializeApp(firebaseConfig);
  const analytics = getAnalytics(app);
  const auth = getAuth();


  // Variables
  const form = document.querySelector('.login-form');
  const notification = form.querySelector('.notification')
  const emailInput = form.querySelector('input[name="email"]');
  const passwordInput = form.querySelector('input[name="password"]');
  const confirmPasswordInput = form.querySelector('input[name="confirm-password"]'); 

  notification.style.display = 'none' 

  // create password and confirm password validation
  confirmPasswordInput.addEventListener('input', (event) => {
    const password = passwordInput.value;
    const confirmPassword = confirmPasswordInput.value;

    if (password !== confirmPassword) {
      confirmPasswordInput.setCustomValidity('Passwords do not match');
    } else {
      confirmPasswordInput.setCustomValidity('');
    }
  });

  notification.style.display = 'none'
  // Regular login
  form.addEventListener('submit', (event) => {
    event.preventDefault();

    const email = emailInput.value;
    const password = passwordInput.value;

    const auth = getAuth();
  createUserWithEmailAndPassword(auth, email, password)
  .then((userCredential) => {
    // Signed in 
    const user = userCredential.user;
    localStorage.setItem('isLoggedIn', 'true')
    window.location.href = '/'
    // ...
  })
  .catch((error) => {
    const errorCode = error.code;
    const errorMessage = error.message;
    notification.style.display = 'flex'
    // ..
  });
});
</script>



<style lang="scss" is:global>
  @use '../assets/scss/base/border' as *;
  @use '../assets/scss/base/space' as *;

  .login-form {
    label {
      display: block;
      margin-bottom: $space-8;
    }

    input {
      width: 100%;
      @include radius-small;
    }

    input {
      padding: $space-8;
      border: 2px solid var(--neutral-600);
    }

    .checkbox {
      display: flex;
      align-items: center;
      gap: $space-4;

      input {
        width: auto;
      }
    }
  }
</style>

